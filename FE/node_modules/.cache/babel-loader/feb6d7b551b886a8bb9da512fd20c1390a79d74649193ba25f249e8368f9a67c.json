{"ast":null,"code":"const BASE_URL = \"https://jtc4x6-5000.csb.app\";\nconst defaultHeaders = {\n  \"Content-Type\": \"application/json\"\n};\nconst handleResponse = async response => {\n  if (!response.ok) {\n    const errorData = await response.json().catch(() => ({}));\n    throw new Error(errorData.error || response.statusText);\n  }\n  return response.json();\n};\nexport const api = {\n  login: async credentials => {\n    const response = await fetch(`${BASE_URL}/api/admin/login`, {\n      method: \"POST\",\n      headers: defaultHeaders,\n      body: JSON.stringify(credentials),\n      credentials: \"include\"\n    });\n    return handleResponse(response);\n  },\n  register: async userData => {\n    const response = await fetch(`${BASE_URL}/api/user`, {\n      method: \"POST\",\n      headers: defaultHeaders,\n      body: JSON.stringify(userData),\n      credentials: \"include\"\n    });\n    return handleResponse(response);\n  },\n  logout: async () => {\n    const response = await fetch(`${BASE_URL}/api/admin/logout`, {\n      method: \"POST\",\n      headers: defaultHeaders,\n      credentials: \"include\"\n    });\n    return handleResponse(response);\n  },\n  uploadPhoto: async formData => {\n    const response = await fetch(`${BASE_URL}/api/photos/new`, {\n      method: \"POST\",\n      // Don't set Content-Type header for FormData\n      body: formData,\n      credentials: \"include\"\n    });\n    return handleResponse(response);\n  },\n  getPhotos: async userId => {\n    const response = await fetch(`${BASE_URL}/api/photos/${userId}`, {\n      credentials: \"include\"\n    });\n    return handleResponse(response);\n  },\n  deletePhoto: async photoId => {\n    const response = await fetch(`${BASE_URL}/api/photos/${photoId}`, {\n      method: \"DELETE\",\n      headers: defaultHeaders,\n      credentials: \"include\"\n    });\n    return handleResponse(response);\n  }\n};","map":{"version":3,"names":["BASE_URL","defaultHeaders","handleResponse","response","ok","errorData","json","catch","Error","error","statusText","api","login","credentials","fetch","method","headers","body","JSON","stringify","register","userData","logout","uploadPhoto","formData","getPhotos","userId","deletePhoto","photoId"],"sources":["C:/Users/HOME/Desktop/BEFINAL/BEFINAL/FE/src/services/api.js"],"sourcesContent":["const BASE_URL = \"https://jtc4x6-5000.csb.app\";\r\n\r\nconst defaultHeaders = {\r\n  \"Content-Type\": \"application/json\",\r\n};\r\n\r\nconst handleResponse = async (response) => {\r\n  if (!response.ok) {\r\n    const errorData = await response.json().catch(() => ({}));\r\n    throw new Error(errorData.error || response.statusText);\r\n  }\r\n  return response.json();\r\n};\r\n\r\nexport const api = {\r\n  login: async (credentials) => {\r\n    const response = await fetch(`${BASE_URL}/api/admin/login`, {\r\n      method: \"POST\",\r\n      headers: defaultHeaders,\r\n      body: JSON.stringify(credentials),\r\n      credentials: \"include\",\r\n    });\r\n    return handleResponse(response);\r\n  },\r\n\r\n  register: async (userData) => {\r\n    const response = await fetch(`${BASE_URL}/api/user`, {\r\n      method: \"POST\",\r\n      headers: defaultHeaders,\r\n      body: JSON.stringify(userData),\r\n      credentials: \"include\",\r\n    });\r\n    return handleResponse(response);\r\n  },\r\n\r\n  logout: async () => {\r\n    const response = await fetch(`${BASE_URL}/api/admin/logout`, {\r\n      method: \"POST\",\r\n      headers: defaultHeaders,\r\n      credentials: \"include\",\r\n    });\r\n    return handleResponse(response);\r\n  },\r\n\r\n  uploadPhoto: async (formData) => {\r\n    const response = await fetch(`${BASE_URL}/api/photos/new`, {\r\n      method: \"POST\",\r\n      // Don't set Content-Type header for FormData\r\n      body: formData,\r\n      credentials: \"include\",\r\n    });\r\n    return handleResponse(response);\r\n  },\r\n\r\n  getPhotos: async (userId) => {\r\n    const response = await fetch(`${BASE_URL}/api/photos/${userId}`, {\r\n      credentials: \"include\",\r\n    });\r\n    return handleResponse(response);\r\n  },\r\n\r\n  deletePhoto: async (photoId) => {\r\n    const response = await fetch(`${BASE_URL}/api/photos/${photoId}`, {\r\n      method: \"DELETE\",\r\n      headers: defaultHeaders,\r\n      credentials: \"include\",\r\n    });\r\n    return handleResponse(response);\r\n  },\r\n}; "],"mappings":"AAAA,MAAMA,QAAQ,GAAG,6BAA6B;AAE9C,MAAMC,cAAc,GAAG;EACrB,cAAc,EAAE;AAClB,CAAC;AAED,MAAMC,cAAc,GAAG,MAAOC,QAAQ,IAAK;EACzC,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;IAChB,MAAMC,SAAS,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACzD,MAAM,IAAIC,KAAK,CAACH,SAAS,CAACI,KAAK,IAAIN,QAAQ,CAACO,UAAU,CAAC;EACzD;EACA,OAAOP,QAAQ,CAACG,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMK,GAAG,GAAG;EACjBC,KAAK,EAAE,MAAOC,WAAW,IAAK;IAC5B,MAAMV,QAAQ,GAAG,MAAMW,KAAK,CAAC,GAAGd,QAAQ,kBAAkB,EAAE;MAC1De,MAAM,EAAE,MAAM;MACdC,OAAO,EAAEf,cAAc;MACvBgB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,WAAW,CAAC;MACjCA,WAAW,EAAE;IACf,CAAC,CAAC;IACF,OAAOX,cAAc,CAACC,QAAQ,CAAC;EACjC,CAAC;EAEDiB,QAAQ,EAAE,MAAOC,QAAQ,IAAK;IAC5B,MAAMlB,QAAQ,GAAG,MAAMW,KAAK,CAAC,GAAGd,QAAQ,WAAW,EAAE;MACnDe,MAAM,EAAE,MAAM;MACdC,OAAO,EAAEf,cAAc;MACvBgB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACE,QAAQ,CAAC;MAC9BR,WAAW,EAAE;IACf,CAAC,CAAC;IACF,OAAOX,cAAc,CAACC,QAAQ,CAAC;EACjC,CAAC;EAEDmB,MAAM,EAAE,MAAAA,CAAA,KAAY;IAClB,MAAMnB,QAAQ,GAAG,MAAMW,KAAK,CAAC,GAAGd,QAAQ,mBAAmB,EAAE;MAC3De,MAAM,EAAE,MAAM;MACdC,OAAO,EAAEf,cAAc;MACvBY,WAAW,EAAE;IACf,CAAC,CAAC;IACF,OAAOX,cAAc,CAACC,QAAQ,CAAC;EACjC,CAAC;EAEDoB,WAAW,EAAE,MAAOC,QAAQ,IAAK;IAC/B,MAAMrB,QAAQ,GAAG,MAAMW,KAAK,CAAC,GAAGd,QAAQ,iBAAiB,EAAE;MACzDe,MAAM,EAAE,MAAM;MACd;MACAE,IAAI,EAAEO,QAAQ;MACdX,WAAW,EAAE;IACf,CAAC,CAAC;IACF,OAAOX,cAAc,CAACC,QAAQ,CAAC;EACjC,CAAC;EAEDsB,SAAS,EAAE,MAAOC,MAAM,IAAK;IAC3B,MAAMvB,QAAQ,GAAG,MAAMW,KAAK,CAAC,GAAGd,QAAQ,eAAe0B,MAAM,EAAE,EAAE;MAC/Db,WAAW,EAAE;IACf,CAAC,CAAC;IACF,OAAOX,cAAc,CAACC,QAAQ,CAAC;EACjC,CAAC;EAEDwB,WAAW,EAAE,MAAOC,OAAO,IAAK;IAC9B,MAAMzB,QAAQ,GAAG,MAAMW,KAAK,CAAC,GAAGd,QAAQ,eAAe4B,OAAO,EAAE,EAAE;MAChEb,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAEf,cAAc;MACvBY,WAAW,EAAE;IACf,CAAC,CAAC;IACF,OAAOX,cAAc,CAACC,QAAQ,CAAC;EACjC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}